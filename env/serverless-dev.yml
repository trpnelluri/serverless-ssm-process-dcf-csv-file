# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

# Serverless.yml is the configuration the CLI
# uses to deploy your code to your provider of choice

# The `service` block is the name of the service
service: serverless-ssm-process-dcf-csv-file

frameworkVersion: '3'

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}

params:
  default:
    domain: ${sls:stage}.preview.myapp.com
  dev:
    sm_pgs_db_auth: dev_esmd_db_secret
    pgs_idle_time_out: 90000
    pgs_conn_time_out: 5000
    bucket_name: dev-epor-esmd-bucket
    doc_code_err_data: ESMD_707^ERR_CSV_DOC_CD_MIS_INVLD^EITHER THE DOCUMENT CODE IS MISSING OR THE FORMAT IS INVALID FOR RECORD {0}
    doc_des_err_data: ESMD_708^ERR_CSV_DOC_DESC_MIS^EITHER THE DOCUMENT DESCRIPTION IS MISSING OR IS INVALID FOR RECORD {0}
    act_status_err_data: ESMD_709^ERR_CSV_ACTN_STUS_MIS^EITHER THE ACTION STATUS IS MISSING OR INVALID - VALID VALUES ARE(A,U,M,E) FOR RECORD {0}
    act_date_err_data: ESMD_710^ERR_CSV_ACTN_DT_MIS^EITHER THE ACTION DATE IS MISSING OR INVALID FOR RECORD {0}
    notification_queue_url: https://sqs.us-east-1.amazonaws.com/818345503029/dev-esmd-email-queue.fifo
    audit_queue_url: https://sqs.us-east-1.amazonaws.com/818345503029/dev-esmd-audit-queue.fifo
    ref_sql_to_upt_status_in_submsn_trans: update esmd_data.submsn_trans set submsn_stus_id = '$1' where glbl_uniq_id = '$2'
    val_fail_notification: DCF_CSV_FILE_VAL_ERRORS
    emty_csv_notification: EMPTY_FILE_FROM_PCG
    max_no_of_recs_to_insert: 50
    tz: America/New_York
    
# The `provider` block defines where your service will be deployed
provider:
  name: aws
  stage: dev
  region: ${opt:region, 'us-east-1'}
  environment:
    REGION: ${self:custom.region}
    STAGE: ${self:custom.stage}
  runtime: nodejs12.x
  
  iam:
    role: arn:aws:iam::818345503029:role/delegatedadmin/developer/esmd_serverless_role

  deploymentBucket:
    name: dev-esmd-aws-generic-bucket # Overwrite the default deployment bucket
    #serverSideEncryption: AES256 # when using server-side encryption

# The `functions` block defines what code to deploy
functions:
  lambda:
    handler: index.handler
    runtime: nodejs12.x
    vpc:
      securityGroupIds:
        - sg-0045bdabe41760471
      subnetIds:
        - subnet-0da5ccca5a9b901cc
        - subnet-07dbc53598ce6c826
        - subnet-08edb915190041adb

    memorySize: 1024 # optional, in MB, default is 1024
    timeout: 10 # 
    provisionedConcurrency: 3 # optional, Count of provisioned lambda instances
    reservedConcurrency: 5 # optional, reserved concurrency limit for this function. By default, AWS uses account concurrency limit
    package:
      exclude:
        - ecs/**
      individually: true
    events: 
      - sqs: arn:aws:sqs:us-east-1:818345503029:dev-esmd-process-dcf-queue.fifo 
    environment:
      ENVIRONMENT_NAME: dev
      SM_PGS_DB_AUTH: ${param:sm_pgs_db_auth}
      PGS_IDLE_TIME_OUT: ${param:pgs_idle_time_out}
      PGS_CONN_TIME_OUT: ${param:pgs_conn_time_out}
      BUCKET_NAME: ${param:bucket_name}
      DOC_CODE_ERR_DATA: ${param:doc_code_err_data}
      DOC_DES_ERR_DATA: ${param:doc_des_err_data}
      ACT_STATUS_ERR_DATA: ${param:act_status_err_data}
      ACT_DATE_ERR_DATA: ${param:act_date_err_data}
      NOTIFICATION_QUEUE_URL: ${param:notification_queue_url}
      AUDIT_QUEUE_URL: ${param:audit_queue_url}
      REF_SQL_TO_UPT_STATUS_IN_SUBMSN_TRANS: ${param:ref_sql_to_upt_status_in_submsn_trans}
      VAL_FAIL_NOTIFICATION: ${param:val_fail_notification}
      EMTY_CSV_NOTIFICATION: ${param:emty_csv_notification}
      MAX_NO_OF_RECS_TO_INSERT: ${param:max_no_of_recs_to_insert}
      TZ: ${param:tz}
